name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: make application-database.yaml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.DATABASE }}" >> ./application.yml
      shell: bash

    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/onezeromate-web .
        docker push ${{ secrets.DOCKER_REPO }}/onezeromate-web

    - name: Get Public IP (cloudflare-ip)
      id: cloudflare-ip
      run: | 
        ipv4=$(dig +short -4 txt ch whoami.cloudflare @1.0.0.1)
        echo "ipv4=$ipv4" >> $GITHUB_ENV
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Add GitHub IP to AWS
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ env.ipv4 }}/32

    - name: create remote directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: mkdir -p /home/ubuntu/srv/ubuntu

    - name: Change remote directory permissions
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo chmod -R 777 /home/ubuntu/srv/ubuntu
          sudo chmod -R 777 /home/ubuntu/srv/ubuntu/certbot
          sudo chmod -R 777 /home/ubuntu/srv/ubuntu/nginx

    - name: copy source via ssh key
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzr --delete
        remote_path: /home/ubuntu/s
